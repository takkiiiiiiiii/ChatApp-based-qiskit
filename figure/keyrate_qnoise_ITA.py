import matplotlib.pyplot as plt
import numpy as np


quantum_noise = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# Sifted key rate, where ITA is 0%.
Ita_0 = [
    974.4632419383504,
    960.162786479112,
    936.7183582179626,
    931.6396218204063,
    919.3033351810122,
    913.5550128590864,
    893.1819933256938,
    878.7355858519568,
    859.0065078382764,
    832.6525467896683,
    830.0533200349721
]
# Data for Channel noise = 1%
# Sifted key rate, where ITA is 10%.

Ita_10 = [
    944.8445864281342,
    931.762214445465,
    918.7746419898376,
    904.2499655145027,
    902.7295605360066,
    899.920805052182,
    866.6222147016788,
    844.6810172112323,
    799.6448263345555,
    821.6525467896683,
    813.4943622789972
]

# Sifted key rate, where ITA is 20%.

Ita_20 = [
    941.141777385607,
    920.0097762214115,
    906.6233147057128,
    891.1623119320699,
    886.1351806507962,
    854.4074398087034,
    845.109185054209,
    833.8318801009215,
    818.5235670084519,
    802.6017106730272,
    792.4850529783307
]

# Sifted key rate, where ITA is 30%.

Ita_30 = [
    905.2558219585131,
    903.4287799759301,
    881.9343210180821,
    871.7195201175498,
    865.1017760914172,
    821.5932433496025,
    822.8378205826024,
    819.931527513324,
    760.436413782231,
    794.4634860106848,
    787.0865503062687
]

# Sifted key rate, where ITA is 40%.

Ita_40 = [
    884.458987427202,
    864.1738784002088,
    860.4739560316691,
    850.9082475126145,
    844.4555111724212,
    819.599602851847,
    797.5850496705461,
    781.7631492341243,
    771.0263866591869,
    775.2516831047672,
    767.6511368561771
]

# Sifted key rate, where ITA is 50%.

Ita_50 = [
    854.832133863112,
    823.4556966023454,
    816.4502899022198,
    803.5185177622856,
    788.8965952398049,
    792.5128647253082,
    762.2502391492349,
    754.9114144453663,
    721.2490954772516,
    715.4360011363767,
    749.8752342894444,
]


# Sifted key rate, where ITA is 60%.
Ita_60 = [
    809.2349631086635,
    800.4453995985868,
    792.0340091102544,
    782.5917984537831,
    775.4174522256349,
    750.1199985681202,
    736.2363571414296,
    727.6752280068487,
    718.0696982975849,
    704.4349565541754,
    713.6042575132071
]

# Sifted key rate, where ITA is 70%.
Ita_70 = [
    795.1535600937227,
    773.1984477360796,
    779.1298974764995,
    765.2304871025601,
    753.4367010353488,
    740.1454647558453,
    720.6082856873321,
    712.5789618858647,
    704.8638076617348,
    714.7295917048975
]
# Sifted key rate, where ITA is 80%.
Ita_80 = [
    784.141267492521,
    768.4237740434372,
    760.6472255185442,
    737.7298509477706,
    736.6795058666877,
    723.8580097655304,
    692.8133355824988,
    685.7139499658435,
    682.5643118136612,
    686.1275346006753,
    707.6312918754755
]
# Sifted key rate, where ITA is 90%.
Ita_90 = [
    743.141267492521,
    735.187750761462,
    726.5140734301059,
    717.7981653746564,
    712.1957123024565,
    709.8867062731027,
    679.0003598466706,
    668.8012635777982,
    672.4310048353343,
    663.9136245446748,
    692.5780048948418

]
# Sifted key rate, where ITA is 100%.
Ita_100 = [
    702.3238945447977,
    689.228246947672,
    692.8709831424055,
    684.1709948110506,
    672.0406036961966,
    669.9585736916241,
    657.0667195011845,
    648.9389890763116,
    638.233363009995,
    629.7080689170033,
    640.7130972748107
]



# Plotting the data
plt.figure(figsize=(8, 5))
plt.plot(quantum_noise, Ita_0, marker='o', label='ITA = 0%')
# plt.plot(quantum_noise, Ita_10, marker='s', label='ITA = 10%')
plt.plot(quantum_noise, Ita_20, marker='D', label='ITA = 20%')
# plt.plot(quantum_noise, Ita_30, marker='x', label='ITA = 30%')
plt.plot(quantum_noise, Ita_40, marker='x', label='ITA = 40%')
# plt.plot(quantum_noise, Ita_50, marker='D', label='ITA = 50%')
plt.plot(quantum_noise, Ita_60, marker='v', label='ITA = 60%')
# plt.plot(quantum_noise, Ita_70, marker='*', label='ITA = 70%')
plt.plot(quantum_noise, Ita_80, marker='>', label='ITA = 80%')
# plt.plot(quantum_noise, Ita_90, marker='>', label='ITA = 90%')
plt.plot(quantum_noise, Ita_100, marker='s', label='ITA = 100%')




plt.xlim(0, 10)
plt.ylim(620, 1000)


plt.yticks(np.arange(620, 1000, 30))
plt.xticks(np.arange(0, 11, 2))


# Adding labels and title
plt.xlabel('Quantum Channel Noise (%)')
plt.ylabel('Sifted Key Rate (bps)')
plt.title('Sifted Key Rate vs Quantum Channel Noise at Different Intercept and Resend Ratio')
plt.legend()
plt.grid(True)
plt.savefig('SiftedKey_Rate_vs_QN_Different_Intercept_and_Resend_Ratio.png', format='png', bbox_inches="tight", dpi=300)

# Display the plot
plt.show()
